import{s as Ls,n as ps}from"./scheduler.BzV8Pfuc.js";import{S as Ts,i as Ms,e as t,s as e,H as ns,c as o,k as i,f as p,m as es,l as d,g as a,d as n}from"./index.DHocS9Wk.js";function qs(_s){let c,ts='<ol class="toc-level toc-level-1"><li class="toc-item toc-item-h1"><a class="toc-link toc-link-h1" href="#lazy-directory-structure">Lazy Directory Structure</a><ol class="toc-level toc-level-2"><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#how-to-organize-confignvim">How to organize ‘.config/nvim’</a></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#tables--plugins">Tables == Plugins</a><ol class="toc-level toc-level-3"><li class="toc-item toc-item-h3"><a class="toc-link toc-link-h3" href="#basic-idea">basic idea</a></li><li class="toc-item toc-item-h3"><a class="toc-link toc-link-h3" href="#loading-the-plugins-in-initlua">loading the plugins in init.lua</a></li><li class="toc-item toc-item-h3"><a class="toc-link toc-link-h3" href="#example-for-telescope-and-related-plugins">example for telescope and related plugins</a></li></ol></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#do-plugins--neovim">Do plugins == Neovim?</a></li></ol></li></ol>',j,r,os='<a aria-hidden="true" tabindex="-1" href="#lazy-directory-structure"><span class="icon icon-link"></span></a>Lazy Directory Structure',N,m,is='Before using <a href="https://github.com/folke/lazy.nvim" rel="nofollow">lazy</a> I felt that my config was all over the place. Within ’~/.config/nvim/’ I had <code>after/</code>, <code>lua/config</code>, <code>lua/ide</code>, all to manage plugin configuration.',U,f,cs="After helping some friends set up Nvim I realized I was still keeping things rather messy and found a style that seems to make things modular. Allowing for easier upstart, upgrading, and maintenance.",R,y,rs='<a aria-hidden="true" tabindex="-1" href="#how-to-organize-confignvim"><span class="icon icon-link"></span></a>How to organize ‘.config/nvim’',W,h,ys="<li>each folder has a purpose<ul><li><code>ftplugin/</code><ul><li>language specific configuration</li> <li>keybindings</li> <li>snippets</li></ul></li> <li><code>lua/</code><ul><li>all <strong>universal</strong> configurations</li> <li>autocommands</li> <li>keymappings</li> <li><code>lua/plugs/</code><ul><li>every file represents a <em>subtype</em> of plugin</li> <li>this can be as modular or monolithic as you want</li> <li>includes the plugin installation and configuration</li></ul></li></ul></li></ul></li>",F,H,ws=`<pre class="shiki gruvbox" style="background-color:#292828;color:#d4be98" tabindex="0"><code><span class="line"><span style="color:#D8A657">.</span></span>
<span class="line"><span style="color:#A9B665">├──</span><span style="color:#D8A657"> readme.md</span></span>
<span class="line"><span style="color:#A9B665">├──</span><span style="color:#D8A657"> ftplugin</span></span>
<span class="line"><span style="color:#A9B665">│  </span><span style="color:#D8A657"> ├──</span><span style="color:#D8A657"> cpp.lua</span></span>
<span class="line"><span style="color:#A9B665">│  </span><span style="color:#D8A657"> ├──</span><span style="color:#D8A657"> go.lua</span></span>
<span class="line"><span style="color:#A9B665">│  </span><span style="color:#D8A657"> ├──</span><span style="color:#D8A657"> nim.lua</span></span>
<span class="line"><span style="color:#A9B665">│  </span><span style="color:#D8A657"> ├──</span><span style="color:#D8A657"> ocaml.lua</span></span>
<span class="line"><span style="color:#A9B665">│  </span><span style="color:#D8A657"> ├──</span><span style="color:#D8A657"> python.lua</span></span>
<span class="line"><span style="color:#A9B665">│  </span><span style="color:#D8A657"> ├──</span><span style="color:#D8A657"> rust.lua</span></span>
<span class="line"><span style="color:#A9B665">│  </span><span style="color:#D8A657"> ├──</span><span style="color:#D8A657"> solidity.lua</span></span>
<span class="line"><span style="color:#A9B665">│  </span><span style="color:#D8A657"> └──</span><span style="color:#D8A657"> telekasten.lua</span></span>
<span class="line"><span style="color:#A9B665">├──</span><span style="color:#D8A657"> init.lua</span></span>
<span class="line"><span style="color:#A9B665">├──</span><span style="color:#D8A657"> lazy-lock.json</span></span>
<span class="line"><span style="color:#A9B665">└──</span><span style="color:#D8A657"> lua</span></span>
<span class="line"><span style="color:#A9B665">    ├──</span><span style="color:#D8A657"> autocmd.lua</span></span>
<span class="line"><span style="color:#A9B665">    ├──</span><span style="color:#D8A657"> keymaps.lua</span></span>
<span class="line"><span style="color:#A9B665">    └──</span><span style="color:#D8A657"> plugs</span></span>
<span class="line"><span style="color:#A9B665">        ├──</span><span style="color:#D8A657"> editor.lua</span></span>
<span class="line"><span style="color:#A9B665">        ├──</span><span style="color:#D8A657"> fuzzy.lua</span></span>
<span class="line"><span style="color:#A9B665">        ├──</span><span style="color:#D8A657"> git.lua</span></span>
<span class="line"><span style="color:#A9B665">        ├──</span><span style="color:#D8A657"> lsp.lua</span></span>
<span class="line"><span style="color:#A9B665">        ├──</span><span style="color:#D8A657"> repl.lua</span></span>
<span class="line"><span style="color:#A9B665">        ├──</span><span style="color:#D8A657"> snips.lua</span></span>
<span class="line"><span style="color:#A9B665">        └──</span><span style="color:#D8A657"> theme.lua</span></span></code></pre>`,L,u,us='<a aria-hidden="true" tabindex="-1" href="#tables--plugins"><span class="icon icon-link"></span></a>Tables == Plugins',O,g,Ds="<li>what is great about lazy (and a few other plugin managers) is that plugin setups are simply lua tables.</li> <li>as a result you can return and agregate these tables from different lua modules (files with returns) and load your plugins in one place</li>",V,D,Es='<a aria-hidden="true" tabindex="-1" href="#basic-idea"><span class="icon icon-link"></span></a>basic idea',Y,v,Bs="<li>this could be some file names <code>foo.lua</code> in the folder where we put our plugin files<ul><li>we return a table with the plugins related to <strong>foo</strong> and their configurations</li></ul></li>",G,T,Cs=`<pre class="shiki gruvbox" style="background-color:#292828;color:#d4be98" tabindex="0"><code><span class="line"><span style="color:#EA6962">return</span><span style="color:#D4BE98"> &#123;</span></span>
<span class="line"><span style="color:#D8A657">  'github/link'</span><span style="color:#D4BE98">,</span></span>
<span class="line"><span style="color:#928374;font-style:italic">  -- optional configuration</span></span>
<span class="line"><span style="color:#D4BE98">  dependencies </span><span style="color:#E78A4E">=</span><span style="color:#D4BE98"> &#123;&#125;,</span></span>
<span class="line"><span style="color:#A9B665">  config</span><span style="color:#E78A4E"> =</span><span style="color:#EA6962"> function</span><span style="color:#D4BE98"> ()</span></span>
<span class="line"><span style="color:#928374;font-style:italic">    -- plugin config / setup</span></span>
<span class="line"><span style="color:#EA6962">  end</span></span>
<span class="line"><span style="color:#D4BE98">&#125;</span></span></code></pre>`,M,E,As='<a aria-hidden="true" tabindex="-1" href="#loading-the-plugins-in-initlua"><span class="icon icon-link"></span></a>loading the plugins in init.lua',J,b,ds="When we want to load our plugin files we can do one of two things",K,k,ms="<li>Require each ‘module’ or plugin file<ul><li>create a table of each plugin file loaded as a module</li> <li>pass this into lazy</li></ul></li> <li>Tell lazy which directories (directories in lua can be refeferenced by their name)<ul><li>add this as a parameter to lazy’s setup</li></ul></li>",Q,q,zs=`<pre class="shiki gruvbox" style="background-color:#292828;color:#d4be98" tabindex="0"><code><span class="line"><span style="color:#EA6962">local</span><span style="color:#D4BE98"> lazypath </span><span style="color:#E78A4E">=</span><span style="color:#D4BE98"> vim.fn.</span><span style="color:#A9B665">stdpath</span><span style="color:#D4BE98">(</span><span style="color:#D8A657">'data'</span><span style="color:#D4BE98">) </span><span style="color:#E78A4E">..</span><span style="color:#D8A657"> '/lazy/lazy.nvim'</span></span>
<span class="line"><span style="color:#EA6962">if</span><span style="color:#E78A4E"> not</span><span style="color:#D4BE98"> vim.loop.</span><span style="color:#A9B665">fs_stat</span><span style="color:#D4BE98">(lazypath) </span><span style="color:#EA6962">then</span></span>
<span class="line"><span style="color:#D4BE98">  vim.fn.</span><span style="color:#A9B665">system</span><span style="color:#D4BE98">(&#123;</span></span>
<span class="line"><span style="color:#D8A657">    'git'</span><span style="color:#D4BE98">,</span></span>
<span class="line"><span style="color:#D8A657">    'clone'</span><span style="color:#D4BE98">,</span></span>
<span class="line"><span style="color:#D8A657">    '--filter=blob:none'</span><span style="color:#D4BE98">,</span></span>
<span class="line"><span style="color:#D8A657">    'https://github.com/folke/lazy.nvim.git'</span><span style="color:#D4BE98">,</span></span>
<span class="line"><span style="color:#D8A657">    '--branch=stable'</span><span style="color:#D4BE98">,   </span><span style="color:#928374;font-style:italic">-- latest stable release</span></span>
<span class="line"><span style="color:#D4BE98">    lazypath,</span></span>
<span class="line"><span style="color:#D4BE98">  &#125;)</span></span>
<span class="line"><span style="color:#EA6962">end</span></span>
<span class="line"><span style="color:#D4BE98">vim.opt.</span><span style="color:#7DAEA3">rtp</span><span style="color:#D4BE98">:</span><span style="color:#A9B665">prepend</span><span style="color:#D4BE98">(lazypath)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#928374;font-style:italic">-- manually requiring plugins (approach 1)</span></span>
<span class="line"><span style="color:#EA6962">local</span><span style="color:#D4BE98"> plugins </span><span style="color:#E78A4E">=</span><span style="color:#D4BE98"> &#123;</span></span>
<span class="line"><span style="color:#A9B665">  require</span><span style="color:#D4BE98">(</span><span style="color:#D8A657">"plugs.lsp"</span><span style="color:#D4BE98">),</span></span>
<span class="line"><span style="color:#A9B665">  require</span><span style="color:#D4BE98">(</span><span style="color:#D8A657">"plugs.theme"</span><span style="color:#D4BE98">),</span></span>
<span class="line"><span style="color:#A9B665">  require</span><span style="color:#D4BE98">(</span><span style="color:#D8A657">"plugs.fuzzy"</span><span style="color:#D4BE98">),</span></span>
<span class="line"><span style="color:#A9B665">  require</span><span style="color:#D4BE98">(</span><span style="color:#D8A657">"plugs.lsp"</span><span style="color:#D4BE98">),</span></span>
<span class="line"><span style="color:#A9B665">  require</span><span style="color:#D4BE98">(</span><span style="color:#D8A657">"plugs.snips"</span><span style="color:#D4BE98">),</span></span>
<span class="line"><span style="color:#A9B665">  require</span><span style="color:#D4BE98">(</span><span style="color:#D8A657">"plugs.repl"</span><span style="color:#D4BE98">),</span></span>
<span class="line"><span style="color:#A9B665">  require</span><span style="color:#D4BE98">(</span><span style="color:#D8A657">"plugs.git"</span><span style="color:#D4BE98">),</span></span>
<span class="line"><span style="color:#A9B665">  require</span><span style="color:#D4BE98">(</span><span style="color:#D8A657">"plugs.editor"</span><span style="color:#D4BE98">)</span></span>
<span class="line"><span style="color:#D4BE98">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A9B665">require</span><span style="color:#D4BE98">(</span><span style="color:#D8A657">'lazy'</span><span style="color:#D4BE98">).</span><span style="color:#A9B665">setup</span><span style="color:#D4BE98">(plugins)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#928374;font-style:italic">-- importing the module directly (approach 2)</span></span>
<span class="line"><span style="color:#A9B665">require</span><span style="color:#D4BE98">(</span><span style="color:#D8A657">'lazy'</span><span style="color:#D4BE98">).</span><span style="color:#A9B665">setup</span><span style="color:#D4BE98">(&#123;import</span><span style="color:#E78A4E">=</span><span style="color:#D8A657">"plugs"</span><span style="color:#D4BE98">&#125;) </span><span style="color:#928374;font-style:italic">-- get's all the 'lua/plug/' files</span></span></code></pre>`,S,B,fs='<a aria-hidden="true" tabindex="-1" href="#example-for-telescope-and-related-plugins"><span class="icon icon-link"></span></a>example for telescope and related plugins',X,x,hs="This is an example from my <code>lua/plugs/fuzzy.lua</code> module where I setup telescope and its related plugins",Z,_,gs="<li>I start the file with a <code>require {}</code> and put all my setup within the return</li> <li>the keymaps and settings are all setup within the plugins <code>config = function () ... end</code><ul><li>this means if something isn’t working or I want to add some functionality I know exactly where to look</li></ul></li>",$,I,Hs=`<pre class="shiki gruvbox" style="background-color:#292828;color:#d4be98" tabindex="0"><code><span class="line"><span style="color:#EA6962">return</span><span style="color:#D4BE98"> &#123;</span></span>
<span class="line"><span style="color:#D8A657">  'nvim-telescope/telescope.nvim'</span><span style="color:#D4BE98">,</span></span>
<span class="line"><span style="color:#D4BE98">  &#123;</span></span>
<span class="line"><span style="color:#D8A657">    'nvim-telescope/telescope-fzf-native.nvim'</span><span style="color:#D4BE98">,</span></span>
<span class="line"><span style="color:#D4BE98">    dependencies </span><span style="color:#E78A4E">=</span><span style="color:#D4BE98"> &#123; </span><span style="color:#D8A657">'nvim-lua/plenary.nvim' </span><span style="color:#D4BE98">&#125;,</span></span>
<span class="line"><span style="color:#D4BE98">    build </span><span style="color:#E78A4E">=</span><span style="color:#D8A657"> 'make'</span><span style="color:#D4BE98">,</span></span>
<span class="line"><span style="color:#A9B665">    config</span><span style="color:#E78A4E"> =</span><span style="color:#EA6962"> function</span><span style="color:#D4BE98">()</span></span>
<span class="line"><span style="color:#EA6962">      local</span><span style="color:#D4BE98"> default_theme </span><span style="color:#E78A4E">=</span><span style="color:#A9B665"> require</span><span style="color:#D4BE98">(</span><span style="color:#D8A657">'telescope.themes'</span><span style="color:#D4BE98">).</span><span style="color:#A9B665">get_ivy</span><span style="color:#D4BE98">(&#123;&#125;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#928374;font-style:italic">      -- setup plugin</span></span>
<span class="line"><span style="color:#A9B665">      require</span><span style="color:#D4BE98">(</span><span style="color:#D8A657">'telescope'</span><span style="color:#D4BE98">).</span><span style="color:#A9B665">setup</span><span style="color:#D4BE98">(&#123;</span></span>
<span class="line"><span style="color:#D4BE98">        defaults </span><span style="color:#E78A4E">=</span><span style="color:#D4BE98"> &#123;</span></span>
<span class="line"><span style="color:#D4BE98">          layout_strategy </span><span style="color:#E78A4E">=</span><span style="color:#D4BE98"> default_theme.layout_strategy,</span></span>
<span class="line"><span style="color:#D4BE98">          layout_config </span><span style="color:#E78A4E">=</span><span style="color:#D4BE98"> default_theme.layout_config,</span></span>
<span class="line"><span style="color:#D4BE98">        &#125;,</span></span>
<span class="line"><span style="color:#D4BE98">      &#125;)</span></span>
<span class="line"><span style="color:#A9B665">      require</span><span style="color:#D4BE98">(</span><span style="color:#D8A657">'telescope'</span><span style="color:#D4BE98">).</span><span style="color:#A9B665">load_extension</span><span style="color:#D4BE98">(</span><span style="color:#D8A657">'fzf'</span><span style="color:#D4BE98">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#928374;font-style:italic">      -- set custom keybindings</span></span>
<span class="line"><span style="color:#EA6962">      local</span><span style="color:#D4BE98"> tsb </span><span style="color:#E78A4E">=</span><span style="color:#A9B665"> require</span><span style="color:#D8A657"> 'telescope.builtin'</span></span>
<span class="line"><span style="color:#D4BE98">      vim.keymap.</span><span style="color:#A9B665">set</span><span style="color:#D4BE98">(</span><span style="color:#D8A657">'n'</span><span style="color:#D4BE98">, </span><span style="color:#D8A657">'&#x3C;Space>bs'</span><span style="color:#D4BE98">, tsb.buffers, &#123; desc </span><span style="color:#E78A4E">=</span><span style="color:#D8A657"> 'ts buf' </span><span style="color:#D4BE98">&#125;)</span></span>
<span class="line"><span style="color:#D4BE98">      vim.keymap.</span><span style="color:#A9B665">set</span><span style="color:#D4BE98">(</span><span style="color:#D8A657">'n'</span><span style="color:#D4BE98">, </span><span style="color:#D8A657">'&#x3C;Space>.'</span><span style="color:#D4BE98">, </span><span style="color:#EA6962">function</span><span style="color:#D4BE98">()</span></span>
<span class="line"><span style="color:#D4BE98">        tsb.</span><span style="color:#A9B665">find_files</span><span style="color:#D4BE98">(&#123; no_ignore </span><span style="color:#E78A4E">=</span><span style="color:#89B482"> true</span><span style="color:#D4BE98"> &#125;) </span><span style="color:#928374;font-style:italic">-- show files git ignores</span></span>
<span class="line"><span style="color:#EA6962">      end</span><span style="color:#D4BE98">, &#123; desc </span><span style="color:#E78A4E">=</span><span style="color:#D8A657"> 'ts find files' </span><span style="color:#D4BE98">&#125;)</span></span>
<span class="line"><span style="color:#D4BE98">      vim.keymap.</span><span style="color:#A9B665">set</span><span style="color:#D4BE98">(</span><span style="color:#D8A657">'n'</span><span style="color:#D4BE98">, </span><span style="color:#D8A657">'&#x3C;Space>pf'</span><span style="color:#D4BE98">, tsb.git_files, &#123; desc </span><span style="color:#E78A4E">=</span><span style="color:#D8A657"> 'ts git files' </span><span style="color:#D4BE98">&#125;)</span></span>
<span class="line"><span style="color:#D4BE98">      vim.keymap.</span><span style="color:#A9B665">set</span><span style="color:#D4BE98">(</span><span style="color:#D8A657">'n'</span><span style="color:#D4BE98">, </span><span style="color:#D8A657">'&#x3C;Space>h'</span><span style="color:#D4BE98">, tsb.help_tags, &#123; desc </span><span style="color:#E78A4E">=</span><span style="color:#D8A657"> 'ts help' </span><span style="color:#D4BE98">&#125;)</span></span>
<span class="line"><span style="color:#D4BE98">      vim.keymap.</span><span style="color:#A9B665">set</span><span style="color:#D4BE98">(</span><span style="color:#D8A657">'n'</span><span style="color:#D4BE98">, </span><span style="color:#D8A657">'&#x3C;Space>m'</span><span style="color:#D4BE98">, tsb.keymaps, &#123; desc </span><span style="color:#E78A4E">=</span><span style="color:#D8A657"> 'ts maps' </span><span style="color:#D4BE98">&#125;)</span></span>
<span class="line"><span style="color:#D4BE98">      vim.keymap.</span><span style="color:#A9B665">set</span><span style="color:#D4BE98">(</span><span style="color:#D8A657">'n'</span><span style="color:#D4BE98">, </span><span style="color:#D8A657">'&#x3C;Space>ps'</span><span style="color:#D4BE98">, tsb.live_grep, &#123; desc </span><span style="color:#E78A4E">=</span><span style="color:#D8A657"> 'grep project' </span><span style="color:#D4BE98">&#125;)</span></span>
<span class="line"><span style="color:#D4BE98">      vim.keymap.</span><span style="color:#A9B665">set</span><span style="color:#D4BE98">(</span><span style="color:#D8A657">'n'</span><span style="color:#D4BE98">, </span><span style="color:#D8A657">'&#x3C;Space>gs'</span><span style="color:#D4BE98">, tsb.git_status, &#123; desc </span><span style="color:#E78A4E">=</span><span style="color:#D8A657"> 'git diff' </span><span style="color:#D4BE98">&#125;)</span></span>
<span class="line"><span style="color:#EA6962">    end</span></span>
<span class="line"><span style="color:#D4BE98">  &#125;,</span></span>
<span class="line"><span style="color:#928374;font-style:italic">  -- telekasten</span></span>
<span class="line"><span style="color:#D4BE98">  &#123;</span></span>
<span class="line"><span style="color:#D8A657">    'renerocksai/telekasten.nvim'</span><span style="color:#D4BE98">,</span></span>
<span class="line"><span style="color:#D4BE98">    dependencies </span><span style="color:#E78A4E">=</span><span style="color:#D4BE98"> &#123; </span><span style="color:#D8A657">'renerocksai/calendar-vim' </span><span style="color:#D4BE98">&#125;,</span></span>
<span class="line"><span style="color:#A9B665">    config</span><span style="color:#E78A4E"> =</span><span style="color:#EA6962"> function</span><span style="color:#D4BE98">()</span></span>
<span class="line"><span style="color:#A9B665">      require</span><span style="color:#D4BE98">(</span><span style="color:#D8A657">'telekasten'</span><span style="color:#D4BE98">).</span><span style="color:#A9B665">setup</span><span style="color:#D4BE98">(&#123;</span></span>
<span class="line"><span style="color:#D4BE98">        home </span><span style="color:#E78A4E">=</span><span style="color:#D4BE98"> vim.fn.</span><span style="color:#A9B665">expand</span><span style="color:#D4BE98">(</span><span style="color:#D8A657">"~/zkast"</span><span style="color:#D4BE98">),</span></span>
<span class="line"><span style="color:#D4BE98">      &#125;)</span></span>
<span class="line"><span style="color:#D4BE98">      vim.keymap.</span><span style="color:#A9B665">set</span><span style="color:#D4BE98">(</span><span style="color:#D8A657">'n'</span><span style="color:#D4BE98">, </span><span style="color:#D8A657">'&#x3C;Space>&#x3C;Space>'</span><span style="color:#D4BE98">, </span><span style="color:#D8A657">'&#x3C;cmd>Telekasten panel&#x3C;CR>'</span><span style="color:#D4BE98">, &#123; desc </span><span style="color:#E78A4E">=</span><span style="color:#D8A657"> 'telekasten panel' </span><span style="color:#D4BE98">&#125;)</span></span>
<span class="line"><span style="color:#D4BE98">      vim.keymap.</span><span style="color:#A9B665">set</span><span style="color:#D4BE98">(</span><span style="color:#D8A657">'n'</span><span style="color:#D4BE98">, </span><span style="color:#D8A657">'&#x3C;Space>rf'</span><span style="color:#D4BE98">, </span><span style="color:#D8A657">'&#x3C;cmd>Telekasten find_notes&#x3C;CR>'</span><span style="color:#D4BE98">, &#123; desc </span><span style="color:#E78A4E">=</span><span style="color:#D8A657"> 'telekasten find notes' </span><span style="color:#D4BE98">&#125;)</span></span>
<span class="line"><span style="color:#EA6962">    end</span></span>
<span class="line"><span style="color:#D4BE98">  &#125;,</span></span>
<span class="line"><span style="color:#D4BE98">&#125;</span></span></code></pre>`,P,A,vs='<a aria-hidden="true" tabindex="-1" href="#do-plugins--neovim"><span class="icon icon-link"></span></a>Do plugins == Neovim?',ss,w,bs="What makes nvim great? Is it the core functionality, the lua configuration and extensibility, the community, the plugin ecosystem??? Yes…",ls,C,ks="In my opinion it is a combination of everything. Some people do go a bit plugin crazy and try to offload everything to a plugin (which is ok). However, without any of the amazing attributes listed the plugin system wouldn’t be what it is. Having a ‘real’ configuration language like Lua, with a flushed out api, not only is customization easy but it enables the community to make great plugins. Since I had my first ‘working’ configuration I’ve probably cut my used plugins by 1/3 but I still have them handle some of the most crucial aspects of my workflow.",as,z,xs="Neovim enables its plugin ecosystem and combined it is the best editor (for me)!";return{c(){c=t("nav"),c.innerHTML=ts,j=e(),r=t("h1"),r.innerHTML=os,N=e(),m=t("p"),m.innerHTML=is,U=e(),f=t("p"),f.textContent=cs,R=e(),y=t("h2"),y.innerHTML=rs,W=e(),h=t("ul"),h.innerHTML=ys,F=e(),H=new ns(!1),L=e(),u=t("h2"),u.innerHTML=us,O=e(),g=t("ul"),g.innerHTML=Ds,V=e(),D=t("h3"),D.innerHTML=Es,Y=e(),v=t("ul"),v.innerHTML=Bs,G=e(),T=new ns(!1),M=e(),E=t("h3"),E.innerHTML=As,J=e(),b=t("p"),b.textContent=ds,K=e(),k=t("ol"),k.innerHTML=ms,Q=e(),q=new ns(!1),S=e(),B=t("h3"),B.innerHTML=fs,X=e(),x=t("p"),x.innerHTML=hs,Z=e(),_=t("ul"),_.innerHTML=gs,$=e(),I=new ns(!1),P=e(),A=t("h2"),A.innerHTML=vs,ss=e(),w=t("p"),w.textContent=bs,ls=e(),C=t("p"),C.textContent=ks,as=e(),z=t("p"),z.textContent=xs,this.h()},l(s){c=o(s,"NAV",{class:!0,"data-svelte-h":!0}),i(c)!=="svelte-1c8z7n4"&&(c.innerHTML=ts),j=p(s),r=o(s,"H1",{id:!0,"data-svelte-h":!0}),i(r)!=="svelte-1am30zo"&&(r.innerHTML=os),N=p(s),m=o(s,"P",{"data-svelte-h":!0}),i(m)!=="svelte-bmrqkl"&&(m.innerHTML=is),U=p(s),f=o(s,"P",{"data-svelte-h":!0}),i(f)!=="svelte-1f73l13"&&(f.textContent=cs),R=p(s),y=o(s,"H2",{id:!0,"data-svelte-h":!0}),i(y)!=="svelte-hld9nc"&&(y.innerHTML=rs),W=p(s),h=o(s,"UL",{"data-svelte-h":!0}),i(h)!=="svelte-1hjvz87"&&(h.innerHTML=ys),F=p(s),H=es(s,!1),L=p(s),u=o(s,"H2",{id:!0,"data-svelte-h":!0}),i(u)!=="svelte-cq8stv"&&(u.innerHTML=us),O=p(s),g=o(s,"UL",{"data-svelte-h":!0}),i(g)!=="svelte-1b9npii"&&(g.innerHTML=Ds),V=p(s),D=o(s,"H3",{id:!0,"data-svelte-h":!0}),i(D)!=="svelte-13eujt3"&&(D.innerHTML=Es),Y=p(s),v=o(s,"UL",{"data-svelte-h":!0}),i(v)!=="svelte-jsx7bn"&&(v.innerHTML=Bs),G=p(s),T=es(s,!1),M=p(s),E=o(s,"H3",{id:!0,"data-svelte-h":!0}),i(E)!=="svelte-i382s6"&&(E.innerHTML=As),J=p(s),b=o(s,"P",{"data-svelte-h":!0}),i(b)!=="svelte-csbbsm"&&(b.textContent=ds),K=p(s),k=o(s,"OL",{"data-svelte-h":!0}),i(k)!=="svelte-iojaev"&&(k.innerHTML=ms),Q=p(s),q=es(s,!1),S=p(s),B=o(s,"H3",{id:!0,"data-svelte-h":!0}),i(B)!=="svelte-g12oh"&&(B.innerHTML=fs),X=p(s),x=o(s,"P",{"data-svelte-h":!0}),i(x)!=="svelte-176tpq4"&&(x.innerHTML=hs),Z=p(s),_=o(s,"UL",{"data-svelte-h":!0}),i(_)!=="svelte-4drdjt"&&(_.innerHTML=gs),$=p(s),I=es(s,!1),P=p(s),A=o(s,"H2",{id:!0,"data-svelte-h":!0}),i(A)!=="svelte-hg6a4q"&&(A.innerHTML=vs),ss=p(s),w=o(s,"P",{"data-svelte-h":!0}),i(w)!=="svelte-3ovmfm"&&(w.textContent=bs),ls=p(s),C=o(s,"P",{"data-svelte-h":!0}),i(C)!=="svelte-bidh1g"&&(C.textContent=ks),as=p(s),z=o(s,"P",{"data-svelte-h":!0}),i(z)!=="svelte-1o9fzb9"&&(z.textContent=xs),this.h()},h(){d(c,"class","toc"),d(r,"id","lazy-directory-structure"),d(y,"id","how-to-organize-confignvim"),H.a=L,d(u,"id","tables--plugins"),d(D,"id","basic-idea"),T.a=M,d(E,"id","loading-the-plugins-in-initlua"),q.a=S,d(B,"id","example-for-telescope-and-related-plugins"),I.a=P,d(A,"id","do-plugins--neovim")},m(s,l){a(s,c,l),a(s,j,l),a(s,r,l),a(s,N,l),a(s,m,l),a(s,U,l),a(s,f,l),a(s,R,l),a(s,y,l),a(s,W,l),a(s,h,l),a(s,F,l),H.m(ws,s,l),a(s,L,l),a(s,u,l),a(s,O,l),a(s,g,l),a(s,V,l),a(s,D,l),a(s,Y,l),a(s,v,l),a(s,G,l),T.m(Cs,s,l),a(s,M,l),a(s,E,l),a(s,J,l),a(s,b,l),a(s,K,l),a(s,k,l),a(s,Q,l),q.m(zs,s,l),a(s,S,l),a(s,B,l),a(s,X,l),a(s,x,l),a(s,Z,l),a(s,_,l),a(s,$,l),I.m(Hs,s,l),a(s,P,l),a(s,A,l),a(s,ss,l),a(s,w,l),a(s,ls,l),a(s,C,l),a(s,as,l),a(s,z,l)},p:ps,i:ps,o:ps,d(s){s&&(n(c),n(j),n(r),n(N),n(m),n(U),n(f),n(R),n(y),n(W),n(h),n(F),H.d(),n(L),n(u),n(O),n(g),n(V),n(D),n(Y),n(v),n(G),T.d(),n(M),n(E),n(J),n(b),n(K),n(k),n(Q),q.d(),n(S),n(B),n(X),n(x),n(Z),n(_),n($),I.d(),n(P),n(A),n(ss),n(w),n(ls),n(C),n(as),n(z))}}}const Ps={title:"Simple Neovim Configuration with Lazy.nvim",date:"05-17-24"};class js extends Ts{constructor(c){super(),Ms(this,c,null,qs,Ls,{})}}export{js as default,Ps as metadata};
