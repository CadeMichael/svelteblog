import { HighlighterOptions } from 'shiki';

/**
 * Create MDsveX code highlighting function.
 *
 * @param options - Shiki highlighter options object.
 * @returns A Promise of a MDsvex highlighter function.
 * @public
 */
export declare function createHighlighter(options: HighlighterOptions): Promise<MdvexHighlighter>;

/**
 * MDsveX highlighter type.
 *
 * NOTE: not exported from `mdsvex`, so its copied here.
 * @public
 */
export declare type MdvexHighlighter = (code: string, lang: string | undefined, metastring?: string | undefined) => string | Promise<string>;

/**
 * Parse Markdown code fence metadata.
 *
 * @param metastring - Code block metadata string.
 * @returns Parsed metadata values object.
 * @public
 */
export declare function parseMetadata(metastring: string | undefined): TMetadata;

/**
 * Markdown Code Block Metadata
 *
 * @public
 */
export declare type TMetadata = {
    /**
     * The lines to highlight.
     */
    lineNumbers: number[];
    /**
     * The initial line number to start from.
     */
    lineNumbersStart: number;
    /**
     * Boolean indicating where or not to show line numbers.
     */
    showLineNumbers: boolean;
    /**
     * The title of the code block.
     */
    title?: string | undefined;
    /**
     * The language of the code block.
     */
    lang?: string | undefined;
};

/**
 * @public
 */
export declare type TMetaToken = {
    value: string;
    start: number;
    end: number;
    type: "identifier" | "literal" | "symbol";
};

export { }
